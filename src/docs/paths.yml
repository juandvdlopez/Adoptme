paths: 
  /users: 
    get: 
      summary: all users list 
      tags: 
      - Users
      responses:
        200:
          description: list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/ResponseGetAllUsers'
        400:
          description: Bad request error 
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/BadRequest'
         
      
  /users/{uid}:
    get:
      summary: Get user by id
      tags: 
      - Users
      parameters:
        - in: path
          name: uid
          required: true
          desciption: Unique identifier of the user
          schema:
            type: string
      responses: 
        200: 
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/ResponsePostUser'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/NotFound'

    put: 
      tags: 
      - Users
      summary: Update user by id
      parameters: 
        - in: path
          name: uid
          required: true
          desciption: Unique identifier of the user
          schema:
            type: string

      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyUserPost' 
            example: 
              first_name: Ejemplo
              last_name: coder
              email: corredo@coder.com
              password: 123456qwsf
              role: user
              pets: []
        
      responses:
        200:
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/ResponsePostUser'
        400: 
          description: Bad request error
          content: 
            application/json:
              schema:
                $ref: '#/components/schema/User/BadRequest'

        
    delete:
      summary: delete user by id 
      tags: 
      - Users
      parameters:
        - in: path
          name: uid
          required: true
          desciption: Unique identifier of the user
          schema:
            type: string
      responses: 
        200: 
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/ResponsePostUser'
        404:
          description: User to delete not found
          content:
            application/json:
              schema:
                $ref: '#/components/schema/User/NotFound'